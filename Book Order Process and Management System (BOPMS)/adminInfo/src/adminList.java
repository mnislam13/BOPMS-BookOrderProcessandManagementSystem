
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class adminList extends javax.swing.JFrame {

    /**
     * Creates new form adminList
     */
    public adminList() {
        initComponents();
        DefaultTableModel model = (DefaultTableModel)details.getModel();
        model.setRowCount(0);
        show_admin();
    }
    public ArrayList<admin> adminList()
    {
        ArrayList<admin> adminList = new ArrayList<>();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection connection = DriverManager
            .getConnection(
             "jdbc:sqlserver://localhost:1433;databaseName=BOPMS;"
               + "selectMethod=cursor", "sa", "123456");


            String sql = "Select * from admin";  
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            admin admin;
            while(rs.next()){
                admin = new admin(rs.getString("adminId"),
                    rs.getString("adminName"),
                    rs.getString("adminEmail"),
                    rs.getString("adminPassword"),
                    rs.getString("adminAddress"),
                    rs.getString("adminPhone")); 
                   adminList.add(admin);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return adminList;
    }
        
    public void show_admin(){
    ArrayList<admin> list = adminList();
    DefaultTableModel model = (DefaultTableModel)details.getModel();
    Object[] row = new Object[6];
    for(int i = 0; i < list.size(); i++)
    {
        row[0] = list.get(i).getid();
        row[1] = list.get(i).getname();
        row[2] = list.get(i).getmail();
        row[3] = list.get(i).getpass();
        row[4] = list.get(i).getaddrss();
        row[5] = list.get(i).getphn();
        
        model.addRow(row); 
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        booksPanel3 = new javax.swing.JPanel();
        booksLabel3 = new javax.swing.JLabel();
        booksExitButton3 = new javax.swing.JButton();
        backButtonBooks = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        details = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        addNewAdmin = new javax.swing.JButton();
        searchBookT = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        booksPanel3.setBackground(new java.awt.Color(0, 0, 51));
        booksPanel3.setPreferredSize(new java.awt.Dimension(1017, 704));
        booksPanel3.setLayout(null);

        booksLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        booksLabel3.setForeground(new java.awt.Color(255, 255, 255));
        booksLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        booksLabel3.setText("ADMINS");
        booksPanel3.add(booksLabel3);
        booksLabel3.setBounds(350, 30, 326, 40);

        booksExitButton3.setBackground(new java.awt.Color(255, 255, 255));
        booksExitButton3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        booksExitButton3.setText("X");
        booksExitButton3.setMaximumSize(new java.awt.Dimension(10, 19));
        booksExitButton3.setMinimumSize(new java.awt.Dimension(10, 19));
        booksExitButton3.setPreferredSize(new java.awt.Dimension(10, 19));
        booksExitButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksExitButton3ActionPerformed(evt);
            }
        });
        booksPanel3.add(booksExitButton3);
        booksExitButton3.setBounds(960, 10, 50, 30);

        backButtonBooks.setBackground(new java.awt.Color(255, 255, 255));
        backButtonBooks.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        backButtonBooks.setText("<");
        backButtonBooks.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButtonBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonBooksActionPerformed(evt);
            }
        });
        booksPanel3.add(backButtonBooks);
        backButtonBooks.setBounds(10, 10, 60, 32);

        details.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admin ID", "Admin Name", "Admin Email", "Admin Password", "Admin Address", "Admin Phone No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        details.setColumnSelectionAllowed(true);
        details.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(details);
        details.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        booksPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(0, 90, 1020, 500);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        delete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deleteKeyReleased(evt);
            }
        });
        booksPanel3.add(delete);
        delete.setBounds(840, 610, 80, 30);

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        booksPanel3.add(update);
        update.setBounds(720, 610, 80, 30);

        addNewAdmin.setText("ADD NEW ADMIN");
        addNewAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewAdminActionPerformed(evt);
            }
        });
        booksPanel3.add(addNewAdmin);
        addNewAdmin.setBounds(490, 610, 130, 30);

        searchBookT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBookTKeyReleased(evt);
            }
        });
        booksPanel3.add(searchBookT);
        searchBookT.setBounds(150, 610, 280, 30);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search Here:");
        booksPanel3.add(jLabel1);
        jLabel1.setBounds(20, 610, 130, 30);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(booksPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1017, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(booksPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1017, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void booksExitButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksExitButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_booksExitButton3ActionPerformed

    private void backButtonBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonBooksActionPerformed
        // TODO add your handling code here:

       dispose();
    }//GEN-LAST:event_backButtonBooksActionPerformed

    private void detailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailsMouseClicked
        // TODO add your handling code here:
        int row = details.getSelectedRow();
        TableModel model = details.getModel();

    }//GEN-LAST:event_detailsMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?",
            "Delete",JOptionPane.YES_NO_OPTION);
        if(opt == 0){
            try {

                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager
                .getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=BOPMS;"
                    + "selectMethod=cursor", "sa", "123456");

                TableModel model = details.getModel();
                int i = details.getSelectedRow();

                String id = (String) model.getValueAt(i, 0);
                String sql = "Delete From admin where adminId='"+id+"'";
                PreparedStatement pst = connection.prepareStatement(sql);
                pst.executeUpdate();
                DefaultTableModel Model = (DefaultTableModel)details.getModel();
                Model.setRowCount(0);
                show_admin();
                JOptionPane.showMessageDialog(null, "Deleted Successfully!");

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void deleteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_deleteKeyReleased

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed


    }//GEN-LAST:event_updateActionPerformed

    private void addNewAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewAdminActionPerformed
        form form = new form();
        form . setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addNewAdminActionPerformed

    private void searchBookTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBookTKeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel)details.getModel();
        String search = searchBookT.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        details.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchBookTKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewAdmin;
    private javax.swing.JButton backButtonBooks;
    private javax.swing.JButton booksExitButton;
    private javax.swing.JButton booksExitButton1;
    private javax.swing.JButton booksExitButton2;
    private javax.swing.JButton booksExitButton3;
    private javax.swing.JLabel booksLabel;
    private javax.swing.JLabel booksLabel1;
    private javax.swing.JLabel booksLabel2;
    private javax.swing.JLabel booksLabel3;
    private javax.swing.JPanel booksPanel;
    private javax.swing.JPanel booksPanel1;
    private javax.swing.JPanel booksPanel2;
    private javax.swing.JPanel booksPanel3;
    private javax.swing.JButton delete;
    private javax.swing.JTable details;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchBookT;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
